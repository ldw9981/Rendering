<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect? )
      )?,
      (
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      (
      RmStringVariable |
      RmDirectXEffect |
      RmOpenGLEffect |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      (
      RmStringVariable |
      RmCamera |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      (
      RmStringVariable |
      RmCamera |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmGLPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmShaderCode,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmShaderCode,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmTextureObject
   (
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      (
      RmStringVariable |
      RmState 
      )*
   )>

   <!ELEMENT RmStreamMap
   (
      (
      RmStringVariable |
      RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmStringVariable* )>
   <!ELEMENT RmFloatVariable        ( RmStringVariable* )>
   <!ELEMENT RmVectorVariable       ( RmStringVariable* )>
   <!ELEMENT RmMatrixVariable       ( RmStringVariable* )>   
   <!ELEMENT RmColorVariable        ( RmStringVariable* )>
   <!ELEMENT RmIntegerVariable      ( RmStringVariable* )>
   <!ELEMENT Rm2DTextureVariable    ( RmStringVariable* )>
   <!ELEMENT RmCubemapVariable      ( RmStringVariable* )>
   <!ELEMENT Rm3DTextureVariable    ( RmStringVariable* )>
   <!ELEMENT RmLightVariable        ( RmStringVariable* )>
   <!ELEMENT RmMaterialVariable     ( RmStringVariable* )>
   <!ELEMENT RmCamera               ( RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock ) >
   
   <!ELEMENT RmDynamicVariable
   (
      RmStringVariable*,
      RmDynamicVariableValueContainer
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
      RmRegistryBranch |
      RmStringVariable |
      RmIntegerVariable |
      RmBooleanVariable |
      RmFloatVariable
      )*      
   )>

   <!ELEMENT RmStreamChannel        EMPTY >
   <!ELEMENT RmShaderConstant       EMPTY >
   <!ELEMENT RmSampler              EMPTY >
   <!ELEMENT RmState                EMPTY >
   <!ELEMENT RmDynamicVariableValue EMPTY >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >

   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Effect Workspace" ACTIVE_EFFECT="Effect Workspace.Bouncing Ball Effects.BounceOnDeformingSurface" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.1">
  <RmRegistryBranch NAME="RM_REGISTRY" XML_VERSION="RenderMonkey 1.1">
   <RmRegistryBranch NAME="RM_LOCAL" XML_VERSION="RenderMonkey 1.1">
    <RmRegistryBranch NAME="WORKSPACE" XML_VERSION="RenderMonkey 1.1">
     <RmStringVariable NAME="LAST_SAVE" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
24/2/2004 14:8:21]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.1 (build 286)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.1]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
F:\3darg\Tools\RenderMonkey\effects\DX9\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmStringVariable NAME="Header" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
$File: //depot/3darg/Tools/RenderMonkey/Examples/DX9/Bounce.rfx $
$Revision: #5 $

© AMD, 2007]]></RmTextDataBlock></RmStringVariable>
  <RmEffectGroup NAME="Bouncing Ball Effects">
   <RmDirectXEffect NAME="BounceOnDeformingSurface" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" CAMERA_POSITION_X="256.429352" CAMERA_POSITION_Y="109.246536" CAMERA_POSITION_Z="126.771149" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="1.000000" UP_VECTOR_X="-0.393258" UP_VECTOR_Y="-0.136459" UP_VECTOR_Z="0.909245" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="10000.000000"/>
    <RmFloatVariable NAME="stiffness" ARTIST_EDITABLE="TRUE" VALUE="0.000120" MIN="0.000000" MAX="0.001000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="hardness" ARTIST_EDITABLE="TRUE" VALUE="25.000000" MIN="0.000000" MAX="50.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="ballSize" ARTIST_EDITABLE="TRUE" VALUE="21.000000" MIN="0.000000" MAX="50.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="bounciness" ARTIST_EDITABLE="TRUE" VALUE="0.550000" MIN="0.000000" MAX="1.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="BaseMap" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Tiles.dds"/>
    <RmModelData NAME="Terrain" FILE_NAME="..\Media\Models\Terrain2.3ds"/>
    <RmPass NAME="Surface" PASS_INDEX="1" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="TRUE"/>
     <RmModelReference NAME="Terrain"/>
     <RmRenderStateBlock NAME="Render State">
      <RmState NAME="D3DRS_CULLMODE" STATE="22" VALUE="1" USAGE="RENDER_STATE"/>
      <RmState NAME="D3DRS_FILLMODE" STATE="8" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4 lightDir: register(c0);
sampler BaseMap: register(s0);
float4 main( float2 texCoord : TEXCOORD0,
	       float3 normal   : TEXCOORD1, 
 		 float3 viewVec  : TEXCOORD2) : COLOR 
{
   float4 base = tex2D(BaseMap, texCoord);

   // Soft diffuse
   float diffuse = 0.5 + 0.5 * dot(lightDir, normal);

   // Standard specular
   float specular = pow(saturate(dot(reflect(-normalize(viewVec), normal), lightDir)), 64);

   return diffuse * base + 0.4 * specular;
}







]]></RmShaderCode>
      <RmSampler NAME="BaseMap" REGISTER="0"/>
      <RmShaderConstant NAME="lightDir" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float bounceHeight;
float4x4 view_proj_matrix;
float time_0_X;
float ballSize;
float bounciness;
float stiffness;
float hardness;
float4x4 view_matrix;
float bounceSpeed;
struct VS_OUTPUT 
{
   float4 Pos:      POSITION;
   float2 texCoord: TEXCOORD0;
   float3 normal:   TEXCOORD1;
   float3 viewVec:  TEXCOORD2;
};

float sinc(float x)
{
   return sin(x) / x;
}

// Returns the height at the given position
float getZ(float2 Pos, float push, float ballz)
{
   float punch = exp(-stiffness * dot(Pos, Pos));

   ballz -= sqrt(max(ballSize * ballSize - dot(Pos, Pos), 0));

   // Make sure the ball never leaks through
   return min(punch * push, ballz);
}

// Offsets at which we sample the heights to form the normal
const float2 offX = float2(1, 0);
const float2 offY = float2(0, 1);

VS_OUTPUT main(float4 Pos: POSITION, float2 texCoord: TEXCOORD0)
{
   VS_OUTPUT Out;

   // Our model is a little too large ...
   Pos.xyz *= 0.4;

   // The balls bouncy movement
   float s = frac(bounceSpeed * time_0_X);
   float t = 4 * s * (1 - s);

   // The height at which the ball currently is, slightly
   // offset to ensure no leaks.
   float ballz = bounceHeight * t - 3;

   // The vibrating movement of the surface
   float push = -ballSize * sinc(hardness * s);

   // Sample at current position and two neighbors
   float z0 = getZ(Pos.xy, push, ballz);
   float z1 = getZ(Pos.xy + offX, push, ballz);
   float z2 = getZ(Pos.xy + offY, push, ballz);

   Pos.z = z0;

   // Construct tangent and binormal from sampled positions
   float3 tangent  = float3(offX, z1 - z0);
   float3 binormal = float3(offY, z2 - z0);

   // Construct the normal
   float3 normal = normalize(cross(tangent, binormal));

   Out.Pos = mul(view_proj_matrix, Pos);
   Out.texCoord = texCoord;

   // Eye-space lighting
   Out.normal  = mul(view_matrix, normal);
   Out.viewVec = -mul(view_matrix, Pos);

   return Out;
}

]]></RmShaderCode>
      <RmShaderConstant NAME="ballSize" REGISTER="10"/>
      <RmShaderConstant NAME="bounceHeight" REGISTER="8"/>
      <RmShaderConstant NAME="bounceSpeed" REGISTER="13"/>
      <RmShaderConstant NAME="hardness" REGISTER="12"/>
      <RmShaderConstant NAME="stiffness" REGISTER="11"/>
      <RmShaderConstant NAME="time_0_X" REGISTER="9"/>
      <RmShaderConstant NAME="view_matrix" REGISTER="4"/>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="0"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="standard mapping"/>
     <RmTextureObject NAME="BaseMap" STATE_INDEX="0">
      <RmTextureReference NAME="BaseMap"/>
      <RmState NAME="D3DSAMP_ADDRESSU" STATE="1" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_ADDRESSV" STATE="2" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
    <RmPass NAME="Ball" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="TRUE"/>
     <RmModelReference NAME="Sphere"/>
     <RmRenderStateBlock NAME="Render State">
      <RmState NAME="D3DRS_CULLMODE" STATE="22" VALUE="3" USAGE="RENDER_STATE"/>
     </RmRenderStateBlock>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4 lightDir: register(c0);
float4 ballColor: register(c1);
float4 main(float3 normal: TEXCOORD0, float3 viewVec: TEXCOORD1) : COLOR 
{
   normal = normalize(normal);

   // Soft diffuse
   float diffuse = 0.5 + 0.5 * dot(lightDir, normal);

   // Standard specular
   float specular = pow(saturate(dot(reflect(-normalize(viewVec), normal), lightDir)), 32);

   return diffuse * ballColor + specular;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="ballColor" REGISTER="1"/>
      <RmShaderConstant NAME="lightDir" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float bounceSpeed;
float bounceHeight;
float bounciness;
float ballSize;
float time_0_X;
float4x4 view_matrix;
float4x4 view_proj_matrix;
struct VS_OUTPUT 
{
   float4 Pos:     POSITION;
   float3 normal:  TEXCOORD0;
   float3 viewVec: TEXCOORD1;
};

VS_OUTPUT main(float4 Pos: POSITION, float3 normal: NORMAL)
{
   VS_OUTPUT Out;

   // Compensate for model not being a perfect sphere around origin
   Pos.xyz = ballSize * normalize(Pos.xyz);

   // Create a bouncy movement
   float t = frac(bounceSpeed * time_0_X);
   t *= 4 * (1 - t);

   // .. and move the object accordingly
   Pos.z += bounceHeight * t;

   Out.Pos = mul(view_proj_matrix, Pos);

   // Eye-space lighting
   Out.normal = mul(view_matrix, normal);
   Out.viewVec = -mul(view_matrix, Pos);

   return Out;
}

]]></RmShaderCode>
      <RmShaderConstant NAME="ballSize" REGISTER="10"/>
      <RmShaderConstant NAME="bounceHeight" REGISTER="9"/>
      <RmShaderConstant NAME="bounceSpeed" REGISTER="8"/>
      <RmShaderConstant NAME="time_0_X" REGISTER="11"/>
      <RmShaderConstant NAME="view_matrix" REGISTER="0"/>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="4"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="standard mapping"/>
    </RmPass>
   </RmDirectXEffect>
   <RmDirectXEffect NAME="BounceOnSolidSurface" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" CAMERA_POSITION_X="-5.660337" CAMERA_POSITION_Y="17.233486" CAMERA_POSITION_Z="-49.156551" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="1.000000" UP_VECTOR_X="-0.045227" UP_VECTOR_Y="0.944927" UP_VECTOR_Z="0.324140" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="1000.000000"/>
    <RmFloatVariable NAME="BounceMin" ARTIST_EDITABLE="TRUE" VALUE="-0.100000" MIN="-5.000000" MAX="5.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="squeezeHeight" ARTIST_EDITABLE="FALSE" VALUE="1.400000" MIN="0.000000" MAX="5.000000" CLAMP="FALSE"/>
    <RmFloatVariable NAME="GroundHeight" ARTIST_EDITABLE="FALSE" VALUE="1.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE"/>
    <Rm2DTextureVariable NAME="BaseMap" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Terrain.tga"/>
    <RmModelData NAME="Disc" FILE_NAME="..\Media\Models\Disc.3ds"/>
    <RmPass NAME="Bounce" PASS_INDEX="1" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="TRUE"/>
     <RmModelReference NAME="Sphere"/>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4 ballColor;
float4 lightDir;
float4 main(float3 normal: TEXCOORD0, float3 viewVec: TEXCOORD1) : COLOR {
   // Simple diffuse and specular
   normal = normalize(normal);
   float diffuse = saturate(dot(normal, lightDir));
   float specular = pow(saturate(dot(reflect(normalize(viewVec), normal), lightDir)), 32);

   return ballColor * diffuse + 0.8 * specular;
}









]]></RmShaderCode>
      <RmShaderConstant NAME="ballColor" REGISTER="0"/>
      <RmShaderConstant NAME="lightDir" REGISTER="1"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float BounceMin;
float4x4 view_proj_matrix: register(c0);
float4x4 view_matrix: register(c4);
float time_0_X: register(c8);
float bounceHeight: register(c9);
float GroundHeight: register(c10);
float bounceSpeed: register(c11);
float squeezeHeight: register(c13);
struct VS_OUTPUT {
   float4 Pos: POSITION;
   float3 normal: TEXCOORD0;
   float3 vVec: TEXCOORD1;
};

VS_OUTPUT main(float4 Pos: POSITION, float3 normal: NORMAL){
   VS_OUTPUT Out;

   // Normalize and scale, just because the source
   // model is not a perfect sphere around origin
   float3 pos = 5 * normalize(Pos.xyz);

   // Basic bounce
   float t = frac(time_0_X * bounceSpeed);
   float center = bounceHeight * t * (1 - t);

   pos.y += center + BounceMin;

   // Squeeze ...
   if (pos.y < GroundHeight){
      // Squeeze in Z direction
      float squeeze = (1 - exp(1 * (pos.y - GroundHeight)));
      pos.y = GroundHeight - squeeze * squeezeHeight;
      
      // Flatten in XZ direcion
      float2 xyNorm = normalize(normal.xy);
      pos.xz += squeeze * xyNorm * squeezeHeight;
   }

   Out.Pos    = mul(view_proj_matrix, float4(pos, 1));
   Out.normal = mul(view_matrix, normal);
   Out.vVec   = mul(view_matrix, -pos);

   return Out;
}











]]></RmShaderCode>
      <RmShaderConstant NAME="BounceMin" REGISTER="7"/>
      <RmShaderConstant NAME="GroundHeight" REGISTER="10"/>
      <RmShaderConstant NAME="bounceHeight" REGISTER="9"/>
      <RmShaderConstant NAME="bounceSpeed" REGISTER="11"/>
      <RmShaderConstant NAME="squeezeHeight" REGISTER="13"/>
      <RmShaderConstant NAME="time_0_X" REGISTER="8"/>
      <RmShaderConstant NAME="view_matrix" REGISTER="4"/>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="0"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="standard mapping"/>
    </RmPass>
    <RmPass NAME="Ground" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Disc"/>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4 lightDir: register(c0);
sampler BaseMap: register(s0);
float4 main(float2 texCoord: TEXCOORD0, float3 normal: TEXCOORD1) : COLOR {
   // Basic diffuse lighting
   float4 base = tex2D(BaseMap, texCoord);
   float diffuse = saturate(dot(normalize(normal), lightDir));

   return (0.3 + 0.7 * diffuse) * base;
}







]]></RmShaderCode>
      <RmSampler NAME="BaseMap" REGISTER="0"/>
      <RmShaderConstant NAME="lightDir" REGISTER="0"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4x4 view_proj_matrix: register(c0);
float4x4 view_matrix: register(c4);
struct VS_OUTPUT {
   float4 Pos: POSITION;
   float2 texCoord: TEXCOORD0;
   float3 normal: TEXCOORD1;
};

VS_OUTPUT main(float4 Pos: POSITION, float2 texCoord: TEXCOORD, float3 normal: NORMAL){
   VS_OUTPUT Out;

   // Just flip and scale the model to fit us
   float3 pos = -0.2 * Pos.zyx - 1.0;

   Out.Pos = mul(view_proj_matrix, float4(pos, 1));
   Out.texCoord = Pos.xz * 0.01 + 0.5;
   // We need to flip and negate the normal too
   Out.normal = mul(view_matrix, -normal.zyx);

   return Out;
}






]]></RmShaderCode>
      <RmShaderConstant NAME="view_matrix" REGISTER="4"/>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="0"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="standard mapping"/>
     <RmTextureObject NAME="BaseMap" STATE_INDEX="0">
      <RmTextureReference NAME="BaseMap"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="3" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MAXANISOTROPY" STATE="10" VALUE="16" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmFloatVariable NAME="bounceSpeed" ARTIST_EDITABLE="TRUE" VALUE="1.160000" MIN="0.000000" MAX="2.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="bounceHeight" ARTIST_EDITABLE="TRUE" VALUE="75.000000" MIN="0.000000" MAX="500.000000" CLAMP="FALSE"/>
   <RmFloatVariable NAME="time_0_X" ARTIST_EDITABLE="FALSE" VALUE="55.801514" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE"/>
   <RmVectorVariable NAME="lightDir" ARTIST_EDITABLE="FALSE" VALUE_0="-0.436440" VALUE_1="0.218220" VALUE_2="-0.872869" VALUE_3="1.000000" MIN="-1.000000" MAX="1.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmMatrixVariable NAME="view_proj_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="0.984801" VALUE_1="-2.389145" VALUE_2="0.067375" VALUE_3="-0.067377" VALUE_4="-0.949409" VALUE_5="-0.329441" VALUE_6="2.195112" VALUE_7="1.169772" VALUE_8="-0.838656" VALUE_9="-0.357293" VALUE_10="-0.411337" VALUE_11="305.234589" VALUE_12="-0.838572" VALUE_13="-0.357257" VALUE_14="-0.411295" VALUE_15="306.204041"/>
   <RmMatrixVariable NAME="view_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="0.380963" VALUE_1="-0.924223" VALUE_2="0.026064" VALUE_3="-0.026064" VALUE_4="-0.393258" VALUE_5="-0.136459" VALUE_6="0.909245" VALUE_7="0.484535" VALUE_8="-0.838572" VALUE_9="-0.357257" VALUE_10="-0.411295" VALUE_11="306.204041" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
   <RmColorVariable NAME="ballColor" ARTIST_EDITABLE="TRUE" VALUE_0="1.000000" VALUE_1="0.312185" VALUE_2="0.261927" VALUE_3="1.000000"/>
   <RmStreamMap NAME="standard mapping">
    <RmStream NAME="TexCoord5" STRIDE="32">
     <RmStreamChannel NAME="Position_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="Normal_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="1" USAGE="3" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="TexCoord_0" DATA_SIZE="8" DATA_TYPE="1" REGISTER="2" USAGE="5" USAGE_INDEX="0"/>
    </RmStream>
   </RmStreamMap>
   <RmModelData NAME="Sphere" FILE_NAME="..\Media\Models\Sphere.3ds"/>
  </RmEffectGroup>
 </RmEffectWorkspace>
</RENDER_MONKEY>
