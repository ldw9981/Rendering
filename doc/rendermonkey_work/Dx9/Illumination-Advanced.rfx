<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE RENDER_MONKEY [
   <!ELEMENT RENDER_MONKEY
   (
      RmEffectWorkspace
   )?>

   <!ELEMENT RmEffectWorkspace 
   (
      RmRegistryBranch?,
      RmStringVariable*,
      (
         ( RmDirectXEffect, RmOpenGLEffect? ) |
         ( RmOpenGLEffect, RmDirectXEffect? )
      )?,
      (
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmEffectGroup
      )*
   )>

   <!ELEMENT RmEffectGroup
   ( 
      (
      RmStringVariable |
      RmDirectXEffect |
      RmOpenGLEffect |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData
      )*
   )>

   <!ELEMENT RmDirectXEffect
   ( 
      (
      RmStringVariable |
      RmCamera |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmPass
      )*
   )>

   <!ELEMENT RmOpenGLEffect
   (
      (
      RmStringVariable |
      RmCamera |
      RmBooleanVariable |
      RmFloatVariable |
      RmVectorVariable |
      RmMatrixVariable |
      RmDynamicVariable |
      RmColorVariable |
      Rm2DTextureVariable |
      RmCubemapVariable |
      Rm3DTextureVariable |
      RmLightVariable |
      RmMaterialVariable |
      RmRenderableTexture |
      RmStreamMap |
      RmModelData |
      RmGLPass
      )*
   )>

   <!ELEMENT RmPass
   ( 
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         (
         ( RmHLSLShader | RmShader ),
         ( RmShader | RmHLSLShader )?
         )
      )?,
      RmRenderTarget*,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject
         )*
      )>
                                                                     
   <!ELEMENT RmGLPass
   ( 
      RmStringVariable*,
      RmCameraReference?,
      RmModelReference?,
      RmRenderStateBlock?,
      (
         ( RmGLShader, RmGLShader? ) 
      )?,
      RmRenderTarget?,
      RmStreamMapReference?,
      (
         RmBooleanVariable |
         RmFloatVariable |
         RmVectorVariable |
         RmMatrixVariable |
         RmDynamicVariable |
         RmColorVariable |
         Rm2DTextureVariable |
         RmCubemapVariable |
         Rm3DTextureVariable |
         RmLightVariable |
         RmMaterialVariable |
         RmTextureObject |
         RmLightObject |
         RmMaterialObject |
         RmShaderConstant |
         RmSampler
         )*
      )>
      
   <!ELEMENT RmShader
   ( 
      RmShaderCode,
      (
      RmStringVariable |
      RmShaderConstant
      )*
   )>

   <!ELEMENT RmHLSLShader
   ( 
      RmShaderCode,
      (
      RmStringVariable |
      RmShaderConstant |
      RmSampler
      )*
   )>

   <!ELEMENT RmGLShader
   ( 
      RmShaderCode,
      (
      RmStringVariable
      )*
   )>

   <!ELEMENT RmTextureObject
   (
      RmStringVariable*,
      RmTextureReference?,
      RmState*
   )>

   <!ELEMENT RmLightObject
   (
      RmStringVariable*,
      RmLightReference?
   )>
   
   <!ELEMENT RmMaterialObject
   (
      RmStringVariable*,
      RmMaterialReference?
   )>
   
   <!ELEMENT RmRenderStateBlock
   (
      (
      RmStringVariable |
      RmState 
      )*
   )>

   <!ELEMENT RmStreamMap
   (
      (
      RmStringVariable |
      RmStream 
      )*
   )>

   <!ELEMENT RmStream               ( RmStreamChannel* )>

   <!ELEMENT RmModelData            ( RmStringVariable* )>  
   <!ELEMENT RmTextureReference     ( RmStringVariable* )>
   <!ELEMENT RmLightReference       ( RmStringVariable* )>
   <!ELEMENT RmMaterialReference    ( RmStringVariable* )>
   <!ELEMENT RmCameraReference      ( RmStringVariable* )>
   <!ELEMENT RmModelReference       ( RmStringVariable* )>
   <!ELEMENT RmStreamMapReference   ( RmStringVariable* )>   
   <!ELEMENT RmRenderableTexture    ( RmStringVariable* )>   
   <!ELEMENT RmRenderTarget         ( RmStringVariable* )>   
   <!ELEMENT RmBooleanVariable      ( RmStringVariable* )>
   <!ELEMENT RmFloatVariable        ( RmStringVariable* )>
   <!ELEMENT RmVectorVariable       ( RmStringVariable* )>
   <!ELEMENT RmMatrixVariable       ( RmStringVariable* )>   
   <!ELEMENT RmColorVariable        ( RmStringVariable* )>
   <!ELEMENT RmIntegerVariable      ( RmStringVariable* )>
   <!ELEMENT Rm2DTextureVariable    ( RmStringVariable* )>
   <!ELEMENT RmCubemapVariable      ( RmStringVariable* )>
   <!ELEMENT Rm3DTextureVariable    ( RmStringVariable* )>
   <!ELEMENT RmLightVariable        ( RmStringVariable* )>
   <!ELEMENT RmMaterialVariable     ( RmStringVariable* )>
   <!ELEMENT RmCamera               ( RmStringVariable* )>

   <!ELEMENT RmStringVariable       ( RmTextDataBlock ) >
   
   <!ELEMENT RmDynamicVariable
   (
      RmStringVariable*,
      RmDynamicVariableValueContainer
   )>
   
   <!ELEMENT RmDynamicVariableValueContainer
   (
      RmDynamicVariableValue*
   )>
   
   <!ELEMENT RmTextDataBlock        ( #PCDATA ) >
   
   <!ELEMENT RmRegistryBranch
   ( 
      RmTextDataBlock?,
      (
      RmRegistryBranch |
      RmStringVariable |
      RmIntegerVariable |
      RmBooleanVariable |
      RmFloatVariable
      )*      
   )>

   <!ELEMENT RmStreamChannel        EMPTY >
   <!ELEMENT RmShaderConstant       EMPTY >
   <!ELEMENT RmSampler              EMPTY >
   <!ELEMENT RmState                EMPTY >
   <!ELEMENT RmDynamicVariableValue EMPTY >
   
   <!ELEMENT RmShaderCode           ( #PCDATA ) >

   <!ATTLIST RmEffectWorkspace 
      NAME                          CDATA #REQUIRED
      ACTIVE_EFFECT                 CDATA #REQUIRED
      VALIDATION_STRING             CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >                                 

   <!ATTLIST RmEffectGroup           
      NAME                          CDATA #REQUIRED
   >                                 

   <!ATTLIST RmDirectXEffect                
      NAME                          CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmOpenGLEffect                
      NAME                          CDATA #REQUIRED
      ACTIVE_CAMERA                 CDATA #REQUIRED
   >                                 

   <!ATTLIST RmPass                  
      NAME                          CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 

   <!ATTLIST RmGLPass                  
      NAME                          CDATA #REQUIRED
      PASS_INDEX                    CDATA #REQUIRED
      ENABLED                       ( TRUE | FALSE ) #REQUIRED
   >                                 
   
   <!ATTLIST RmShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  CDATA #REQUIRED
   >                                 

   <!ATTLIST RmHLSLShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
      TARGET                        CDATA #REQUIRED
      ENTRY_POINT                   CDATA #REQUIRED
   >  

   <!ATTLIST RmGLShader        
      NAME                          CDATA #REQUIRED
      PIXEL_SHADER                  ( TRUE | FALSE ) #REQUIRED
   >  

   <!ATTLIST RmShaderConstant
      NAME                          CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >                                 

   <!ATTLIST RmSampler               
      NAME                          CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
   >

   <!ATTLIST RmTextureObject
      NAME                          CDATA #REQUIRED
      STATE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmLightObject
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialObject
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmRenderStateBlock
      NAME                          CDATA #REQUIRED
   >                                 

   <!ATTLIST RmState                 
      NAME                          CDATA #REQUIRED
      STATE                         CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
   >                               

   <!ATTLIST RmStreamMap           
     NAME                           CDATA #REQUIRED
   >                               

   <!ATTLIST RmStream              
      NAME                          CDATA #REQUIRED
      STRIDE                        CDATA #REQUIRED
   >

   <!ATTLIST RmStreamChannel
      NAME                          CDATA #REQUIRED
      DATA_SIZE                     CDATA #REQUIRED
      DATA_TYPE                     CDATA #REQUIRED
      REGISTER                      CDATA #REQUIRED
      USAGE                         CDATA #REQUIRED
      USAGE_INDEX                   CDATA #REQUIRED
   >

   <!ATTLIST RmModelData
      NAME                          CDATA #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmTextureReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmLightReference
      NAME                          CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialReference
      NAME                          CDATA #REQUIRED
   >
   
   <!ATTLIST RmModelReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmStreamMapReference
      NAME                          CDATA #REQUIRED
   >

   <!ATTLIST RmRenderableTexture
      NAME                          CDATA #REQUIRED
      WIDTH                         CDATA #REQUIRED
      HEIGHT                        CDATA #REQUIRED
      FORMAT                        CDATA #REQUIRED
      USE_VIEWPORT_DIMENSIONS       ( TRUE | FALSE ) #REQUIRED
      GENERATE_MIPMAPS              ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmRenderTarget
      NAME                          CDATA #REQUIRED
      INDEX                         CDATA #REQUIRED
      RENDER_TO_SCREEN              ( TRUE | FALSE ) #REQUIRED
      COLOR_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      DEPTH_CLEAR                   ( TRUE | FALSE ) #REQUIRED
      CLEAR_COLOR_VALUE             CDATA #REQUIRED
      DEPTH_CLEAR_VALUE             CDATA #REQUIRED
   >
   
   <!ATTLIST RmBooleanVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
   >

   <!ATTLIST RmFloatVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmVectorVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST RmMatrixVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
      VALUE_4                       CDATA #REQUIRED
      VALUE_5                       CDATA #REQUIRED
      VALUE_6                       CDATA #REQUIRED
      VALUE_7                       CDATA #REQUIRED
      VALUE_8                       CDATA #REQUIRED
      VALUE_9                       CDATA #REQUIRED
      VALUE_10                      CDATA #REQUIRED
      VALUE_11                      CDATA #REQUIRED
      VALUE_12                      CDATA #REQUIRED
      VALUE_13                      CDATA #REQUIRED
      VALUE_14                      CDATA #REQUIRED
      VALUE_15                      CDATA #REQUIRED
   >

   <!ATTLIST RmDynamicVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VARIABLE_TYPE                 ( FLOAT | INTEGER | BOOLEAN ) #REQUIRED
      ROWS                          CDATA #REQUIRED
      COLUMNS                       CDATA #REQUIRED
      FIXED_SIZE                    ( TRUE | FALSE ) #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
      NORMALIZE                     ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmDynamicVariableValue
      ROW_INDEX                     CDATA #REQUIRED
      COLUMN_INDEX                  CDATA #REQUIRED
      VALUE                         CDATA #REQUIRED
   >
   
   <!ATTLIST RmColorVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE_0                       CDATA #REQUIRED
      VALUE_1                       CDATA #REQUIRED
      VALUE_2                       CDATA #REQUIRED
      VALUE_3                       CDATA #REQUIRED
   >

   <!ATTLIST RmIntegerVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      VALUE                         CDATA #REQUIRED
      MIN                           CDATA #REQUIRED
      MAX                           CDATA #REQUIRED
      CLAMP                         ( TRUE | FALSE ) #REQUIRED
   >
   
   <!ATTLIST RmStringVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
   >

   <!ATTLIST Rm2DTextureVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmCubemapVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST Rm3DTextureVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      FILE_NAME                     CDATA #REQUIRED
   >

   <!ATTLIST RmLightVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      LIGHT_ENABLED                 ( TRUE | FALSE ) #REQUIRED
      LIGHT_TYPE                    ( POSITIONAL | DIRECTIONAL | SPOTLIGHT ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      POSITION_0                    CDATA #REQUIRED
      POSITION_1                    CDATA #REQUIRED
      POSITION_2                    CDATA #REQUIRED
      DIRECTION_0                   CDATA #REQUIRED
      DIRECTION_1                   CDATA #REQUIRED
      DIRECTION_2                   CDATA #REQUIRED
      ATTENUATION_0                 CDATA #REQUIRED
      ATTENUATION_1                 CDATA #REQUIRED
      ATTENUATION_2                 CDATA #REQUIRED
      SPOTLIGHT_THETA               CDATA #REQUIRED
      SPOTLIGHT_PHI                 CDATA #REQUIRED
      RANGE                         CDATA #REQUIRED
      FALLOFF                       CDATA #REQUIRED
   >
   
   <!ATTLIST RmMaterialVariable
      NAME                          CDATA #REQUIRED
      ARTIST_EDITABLE               ( TRUE | FALSE ) #REQUIRED
      AMBIENT_0                     CDATA #REQUIRED
      AMBIENT_1                     CDATA #REQUIRED
      AMBIENT_2                     CDATA #REQUIRED
      AMBIENT_3                     CDATA #REQUIRED
      DIFFUSE_0                     CDATA #REQUIRED
      DIFFUSE_1                     CDATA #REQUIRED
      DIFFUSE_2                     CDATA #REQUIRED
      DIFFUSE_3                     CDATA #REQUIRED
      SPECULAR_0                    CDATA #REQUIRED
      SPECULAR_1                    CDATA #REQUIRED
      SPECULAR_2                    CDATA #REQUIRED
      SPECULAR_3                    CDATA #REQUIRED
      EMISSIVE_0                    CDATA #REQUIRED
      EMISSIVE_1                    CDATA #REQUIRED
      EMISSIVE_2                    CDATA #REQUIRED
      EMISSIVE_3                    CDATA #REQUIRED
      SPECULAR_POWER                CDATA #REQUIRED
   >
      
   <!ATTLIST RmRegistryBranch
      NAME                          CDATA #REQUIRED
      XML_VERSION                   CDATA #REQUIRED
   >

   <!ATTLIST RmCamera                
      NAME                          CDATA #REQUIRED
      CAMERA_POSITION_X             CDATA #REQUIRED
      CAMERA_POSITION_Y             CDATA #REQUIRED
      CAMERA_POSITION_Z             CDATA #REQUIRED
      LOOK_AT_VECTOR_X              CDATA #REQUIRED
      LOOK_AT_VECTOR_Y              CDATA #REQUIRED
      LOOK_AT_VECTOR_Z              CDATA #REQUIRED
      UP_VECTOR_X                   CDATA #REQUIRED
      UP_VECTOR_Y                   CDATA #REQUIRED
      UP_VECTOR_Z                   CDATA #REQUIRED
      FOV                           CDATA #REQUIRED
      NEAR_CLIP_PLANE               CDATA #REQUIRED
      FAR_CLIP_PLANE                CDATA #REQUIRED
   >                                 

   <!ATTLIST RmCameraReference                
      NAME                          CDATA #REQUIRED
      USE_ACTIVE_CAMERA             ( TRUE | FALSE ) #REQUIRED
   >                               
   
   <!ATTLIST RmShaderCode                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
   <!ATTLIST RmTextDataBlock                
      TYPE                          ( TEXT ) #REQUIRED
   >                               
   
]>
<RENDER_MONKEY>
 <RmEffectWorkspace NAME="Advanced Illumination Effects" ACTIVE_EFFECT="Advanced Illumination Effects.Polynomial Texture Map Lighting.Shader_ps11" VALIDATION_STRING="" XML_VERSION="RenderMonkey 1.1">
  <RmRegistryBranch NAME="RM_REGISTRY" XML_VERSION="RenderMonkey 1.1">
   <RmRegistryBranch NAME="RM_LOCAL" XML_VERSION="RenderMonkey 1.1">
    <RmRegistryBranch NAME="WORKSPACE" XML_VERSION="RenderMonkey 1.1">
     <RmStringVariable NAME="LAST_SAVE" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
24/2/2004 14:16:29]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="VERSION" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey Version 1.1 (build 286)]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="XML_VERSION" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
RenderMonkey 1.1]]></RmTextDataBlock></RmStringVariable>
     <RmStringVariable NAME="BASE_WORKSPACE_PATH" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
F:\3darg\Tools\RenderMonkey\effects\DX9\]]></RmTextDataBlock></RmStringVariable>
    </RmRegistryBranch>
   </RmRegistryBranch>
  </RmRegistryBranch>
  <RmStringVariable NAME="Header" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
$File: //depot/3darg/Tools/RenderMonkey/Examples/DX9/Illumination-Advanced.rfx $
$Revision: #2 $

© Nathaniel Hoffman, 2003]]></RmTextDataBlock></RmStringVariable>
  <RmEffectGroup NAME="Polynomial Texture Map Lighting">
   <RmStringVariable NAME="Description" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
Polynomial texture map lighting

Based on 'Polynomial Texture Maps', SIGGRAPH 2001, by Tom
Malzender, Dan Gelb and Hans Wolters from HP Labs]]></RmTextDataBlock></RmStringVariable>
   <RmDirectXEffect NAME="HLSL_ps20" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" CAMERA_POSITION_X="0.000000" CAMERA_POSITION_Y="200.000000" CAMERA_POSITION_Z="0.000000" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="0.000000" UP_VECTOR_X="0.000000" UP_VECTOR_Y="0.000000" UP_VECTOR_Z="1.000000" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="1000.000000"/>
    <RmFloatVariable NAME="mode" ARTIST_EDITABLE="FALSE" VALUE="0.120000" MIN="-1.000000" MAX="1.000000" CLAMP="TRUE"/>
    <RmPass NAME="Single Pass" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Cracked Quad 2"/>
     <RmRenderStateBlock NAME="Render State"/>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4 light;
float4x4 view_proj_matrix;
float4x4 inv_view_matrix;
//------------------------------------------------------------------//
// Polynomial texture map lighting  				        //
//                                  					 //
// (C) Nathaniel Hoffman, 2003      					 //
//                                  					 //
// Based on 'Polynomial Texture Maps', SIGGRAPH 2001, by Tom        //
// Malzender, Dan Gelb and Hans Wolters from HP Labs		        //
//------------------------------------------------------------------//
struct VS_OUTPUT
{
   float4 Pos:    POSITION;
   float4 Tex:    TEXCOORD0;
   float3 Light:  TEXCOORD1;
};
VS_OUTPUT main(
   float4 vPosition: POSITION,
   float4 vNormal:   NORMAL,
   float4 vTex:      TEXCOORD,
   float4 vTangent:  TANGENT,
   float4 vBinormal: BINORMAL )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 
   Out.Pos = mul(view_proj_matrix, vPosition);
   
   Out.Tex = vTex;
   float3 light_vector = normalize(mul(inv_view_matrix, light) - Out.Pos);

   Out.Light[0] = dot(light_vector, vTangent.xyz);
   Out.Light[1] = dot(light_vector, vBinormal.xyz);
   Out.Light[2] = dot(light_vector, vNormal.xyz);

   return Out;
}




]]></RmShaderCode>
      <RmShaderConstant NAME="light" REGISTER="-1"/>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="inv_view_matrix" REGISTER="-1"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float mode;
sampler a012_map;
sampler a345_map;
sampler normalizer;
sampler rgb_map;
//------------------------------------------------------------------//
// Polynomial texture map lighting  				        //
//                                  					 //
// (C) Nathaniel Hoffman, 2003      					 //
//                                  					 //
// Based on 'Polynomial Texture Maps', SIGGRAPH 2001, by Tom        //
// Malzender, Dan Gelb and Hans Wolters from HP Labs		        //
//------------------------------------------------------------------//
float4 main( float4 Tex: TEXCOORD0, float3 Light:   TEXCOORD1 ) : COLOR
{
   float3 lu2_lv2_lulv;
   float4 c;
   float3 a012;
   float3 a345;

   // Normalize light direction
   Light = texCUBE(normalizer, Light) * 2.0 - 1.0;

   // z-extrapolation
   if (mode > 0.0f && Light.z < 0.0)
   {
      Light.xy = normalize(Light.xy);
      Light.xy *= (1.0 - Light.z);
   }
   
   Light.z = 1.0;

   // Prepare higher-order terms
   lu2_lv2_lulv = Light.xyx * Light.xyy;

   // read higher-order coeffs from texture and unbias
   a012 = tex2D(a012_map, Tex) * 2.0 - 1.0;

   // read lower-order coeffs from texture and unbias
   // (a5 isn't biased, just halved)
   a345 = tex2D(a345_map, Tex) * 2.0 - 1.0;
   a345[2] += 1.0;

   // Evaluate polynomial
   c = dot(lu2_lv2_lulv, a012) + dot(Light, a345);

   // Multiply by rgb factor
   c = c * tex2D(rgb_map, Tex);
   
   return c;
}






]]></RmShaderCode>
      <RmSampler NAME="a012_map" REGISTER="-1"/>
      <RmSampler NAME="a345_map" REGISTER="-1"/>
      <RmSampler NAME="normalizer" REGISTER="-1"/>
      <RmSampler NAME="rgb_map" REGISTER="-1"/>
      <RmShaderConstant NAME="mode" REGISTER="-1"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="PNTTB Stream Mapping"/>
     <RmTextureObject NAME="normalizer" STATE_INDEX="3">
      <RmTextureReference NAME="Normalizer"/>
     </RmTextureObject>
     <RmTextureObject NAME="rgb_map" STATE_INDEX="0">
      <RmTextureReference NAME="rgb_map"/>
     </RmTextureObject>
     <RmTextureObject NAME="a012_map" STATE_INDEX="1">
      <RmTextureReference NAME="a012_map"/>
     </RmTextureObject>
     <RmTextureObject NAME="a345_map" STATE_INDEX="2">
      <RmTextureReference NAME="a345_map"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmDirectXEffect NAME="Shader_ps11" ACTIVE_CAMERA="Camera">
    <RmCamera NAME="Camera" CAMERA_POSITION_X="48.116669" CAMERA_POSITION_Y="192.676682" CAMERA_POSITION_Z="-23.674229" LOOK_AT_VECTOR_X="0.000000" LOOK_AT_VECTOR_Y="0.000000" LOOK_AT_VECTOR_Z="0.000000" UP_VECTOR_X="0.047964" UP_VECTOR_Y="0.110004" UP_VECTOR_Z="0.992773" FOV="45.000000" NEAR_CLIP_PLANE="1.000000" FAR_CLIP_PLANE="1000.000000"/>
    <RmPass NAME="Single Pass" PASS_INDEX="0" ENABLED="TRUE">
     <RmCameraReference NAME="Camera" USE_ACTIVE_CAMERA="FALSE"/>
     <RmModelReference NAME="Cracked Quad 2"/>
     <RmRenderStateBlock NAME="Render State"/>
     <RmShader NAME="Vertex Shader" PIXEL_SHADER="FALSE"><RmShaderCode TYPE="TEXT"><![CDATA[
//------------------------------------------------------------------//
// Polynomial texture map lighting  				        //
//                                  					 //
// (C) Nathaniel Hoffman, 2003      					 //
//                                  					 //
// Based on 'Polynomial Texture Maps', SIGGRAPH 2001, by Tom        //
// Malzender, Dan Gelb and Hans Wolters from HP Labs		        //
//------------------------------------------------------------------//
vs.1.1

dcl_position   v0
dcl_normal     v1
dcl_texcoord   v2
dcl_tangent    v3
dcl_binormal   v4

; output transformed vertex
m4x4 oPos, v0, c0

; output texture coordinates
mov  oT0, v2      
mov  oT1, v2
mov  oT2, v2

; find light position in object space 
mov r1, c8
m4x4 r0, r1, c4

; find light vector in object space
sub r0, r0, v0

; normalize light vector
dp3 r1.x, r0, r0
rsq r1.x, r1.x
mul r0, r0.xyz, r1.xxx

; calculate lu, lv by projecting light vector into 2D tangent space,
dp3 r1.x, r0, v3  ; lu
dp3 r1.y, r0, v4  ; lv
mov r1.zw, c10.z  ; 1

; get lu^2, lv^2, lulv into oD0 and lu, lv, 1 into oD1
mul r2, r1.xyxz, r1.xyyz

; bias them
mad r1, r1, c10.y, c10.y
mad r2, r2, c10.y, c10.y

mov oD0, r2
mov oD1, r1





]]></RmShaderCode>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="0"/>
      <RmShaderConstant NAME="inv_view_matrix" REGISTER="4"/>
      <RmShaderConstant NAME="light" REGISTER="8"/>
      <RmShaderConstant NAME="commonCont" REGISTER="10"/>
     </RmShader>
     <RmShader NAME="Pixel Shader" PIXEL_SHADER="TRUE"><RmShaderCode TYPE="TEXT"><![CDATA[
//------------------------------------------------------------------//
// Polynomial texture map lighting  				        //
//                                  					 //
// (C) Nathaniel Hoffman, 2003      					 //
//                                  					 //
// Based on 'Polynomial Texture Maps', SIGGRAPH 2001, by Tom        //
// Malzender, Dan Gelb and Hans Wolters from HP Labs		        //
//------------------------------------------------------------------//
ps.1.1

// v0 = Iu^2, Iv^2, IuIv
// v1 = Iu, Iv, 1

def c3, 0, 0, 1, 0

tex t0
tex t1
tex t2

// First 3 terms (second degree)
dp3 r0, v0_bx2, t1_bx2

// Second 3 terms (linear and constant)
add r1, c3, t2_bx2  // a5 is not biased, just halved.
dp3 r1, v1_bx2, r1

// All 6 terms
add r0, r0, r1

// Give Color.
mul r0, r0, t0


]]></RmShaderCode></RmShader>
     <RmStreamMapReference NAME="PNTTB Stream Mapping"/>
     <RmTextureObject NAME="rgb_map" STATE_INDEX="0">
      <RmTextureReference NAME="rgb_map"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="a012_map" STATE_INDEX="1">
      <RmTextureReference NAME="a012_map"/>
     </RmTextureObject>
     <RmTextureObject NAME="a345_map" STATE_INDEX="2">
      <RmTextureReference NAME="a345_map"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmVectorVariable NAME="commonCont" ARTIST_EDITABLE="FALSE" VALUE_0="0.000000" VALUE_1="0.500000" VALUE_2="1.000000" VALUE_3="2.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmVectorVariable NAME="light" ARTIST_EDITABLE="TRUE" VALUE_0="-1440.000000" VALUE_1="-40.000000" VALUE_2="-100.000000" VALUE_3="1.000000" MIN="-2000.000000" MAX="2000.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <Rm2DTextureVariable NAME="rgb_map" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Polynomial Texture Maps\tablet_rgb.tga"/>
   <Rm2DTextureVariable NAME="a345_map" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Polynomial Texture Maps\tablet_a345.tga"/>
   <Rm2DTextureVariable NAME="a012_map" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Polynomial Texture Maps\tablet_a012.tga"/>
   <RmCubemapVariable NAME="Normalizer" ARTIST_EDITABLE="FALSE" FILE_NAME="..\Media\Textures\NormalizerCubemap.dds"/>
   <RmModelData NAME="Cracked Quad 2" FILE_NAME="..\Media\Models\CrackedQuad.3ds"/>
  </RmEffectGroup>
  <RmEffectGroup NAME="Spherical Harmonic Lighting">
   <RmStringVariable NAME="Description" ARTIST_EDITABLE="FALSE"><RmTextDataBlock TYPE="TEXT"><![CDATA[
Spherical harmonic lighting

Based on 'An Efficient Representation for Irradiance
Environment Maps', SIGGRAPH 2001, by Ravi Ramamoorthi and Pat
Hanrahan from Stanford University]]></RmTextDataBlock></RmStringVariable>
   <RmDirectXEffect NAME="PerVertex" ACTIVE_CAMERA="">
    <RmPass NAME="Single Pass" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="Teapot"/>
     <RmRenderStateBlock NAME="Render State"/>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_1_4" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
sampler rgb_map;
//------------------------------------------------------------------//
// Spherical harmonic lighting, per-vertex illumination effect      //
//                                                                  //
// (c) Nathaniel Hoffman 2003                                       //
//                                                                  //
// Based on 'An Efficient Representation for Irradiance             //
// Environment Maps', SIGGRAPH 2001, by Ravi Ramamoorthi and Pat    //
// Hanrahan from Stanford University                                //
//------------------------------------------------------------------//

float4 main(
   float4   Diff: COLOR,      
   float4   Tex:  TEXCOORD ) : COLOR
{
    float4 c = Diff * tex2D(rgb_map, Tex) * 2.0; 

    return c;
}



]]></RmShaderCode>
      <RmSampler NAME="rgb_map" REGISTER="-1"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4x4 view_proj_matrix;
float4x4 r_sh_matrix;
float4x4 g_sh_matrix;
float4x4 b_sh_matrix;
float4x4 view_matrix;
//------------------------------------------------------------------//
// Spherical harmonic lighting, per-vertex illumination effect      //
//                                                                  //
// (c) Nathaniel Hoffman 2003                                       //
//                                                                  //
// Based on 'An Efficient Representation for Irradiance             //
// Environment Maps', SIGGRAPH 2001, by Ravi Ramamoorthi and Pat    //
// Hanrahan from Stanford University                                //
//------------------------------------------------------------------//

struct VS_OUTPUT
{
   float4 Pos:    POSITION;
   float4 Diff:   COLOR;
   float4 Tex:    TEXCOORD;
};
VS_OUTPUT main(
   float4 vPosition: POSITION,
   float4 vNormal:   NORMAL,
   float4 vTex:      TEXCOORD )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 
   Out.Pos = mul( view_proj_matrix, vPosition);

   Out.Tex = vTex;

   // Rotate normal from object/world space to light (view space)
   // (in RenderMonkey, lights are defined in view space).
   float4 normal4 = float4(vNormal.x, vNormal.y, vNormal.z, 0.0);
   normal4 = mul(view_matrix, normal4);
   normal4.w = 1.0;

   // Evaluate spherical harmonic
   Out.Diff.r = dot(mul(r_sh_matrix, normal4), normal4);
   Out.Diff.g = dot(mul(g_sh_matrix, normal4), normal4);
   Out.Diff.b = dot(mul(b_sh_matrix, normal4), normal4);
   Out.Diff.a = 1.0;

   return Out;
}


]]></RmShaderCode>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="r_sh_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="g_sh_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="b_sh_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="view_matrix" REGISTER="-1"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="PNTTB Stream Mapping"/>
     <RmTextureObject NAME="rgb_map" STATE_INDEX="0">
      <RmTextureReference NAME="rgb_map"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmDirectXEffect NAME="PerPixel" ACTIVE_CAMERA="">
    <RmPass NAME="Single Pass" PASS_INDEX="0" ENABLED="TRUE">
     <RmModelReference NAME="Teapot"/>
     <RmRenderStateBlock NAME="Render State"/>
     <RmHLSLShader NAME="Pixel Shader" PIXEL_SHADER="TRUE" TARGET="ps_2_0" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4x4 g_sh_matrix;
float4x4 r_sh_matrix;
float4x4 b_sh_matrix;
sampler bump_map;
sampler rgb_map;
//------------------------------------------------------------------//
// Spherical harmonic lighting, per-pixel illumination effect       //
//                                                                  //
// (c) Nathaniel Hoffman 2003                                       //
//                                                                  //
// Based on 'An Efficient Representation for Irradiance             //
// Environment Maps', SIGGRAPH 2001, by Ravi Ramamoorthi and Pat    //
// Hanrahan from Stanford University                                //
//------------------------------------------------------------------//


float4 main(
   float4 Tex:       TEXCOORD0,  
   float3 Normal:    TEXCOORD1,
   float3 Tangent:   TEXCOORD2,
   float3 Binormal:  TEXCOORD3 ) : COLOR
{
   float4 c;
   float3x3 rotation;
   float3 normal3;
   float4 normal4;

   // Matrix to transform from tangent space into light space)
   rotation = float3x3(Tangent, Binormal, Normal);

   // Get normal
   normal3 = tex2D(bump_map, Tex) * 2.0 - 1.0;

   // Transform normal into light space
   normal3 = mul(normal3, rotation);

   normal4 = float4(normal3, 1.0);

   // Evaluate spherical harmonic
   c.r = dot(mul(r_sh_matrix, normal4), normal4);
   c.g = dot(mul(g_sh_matrix, normal4), normal4);
   c.b = dot(mul(b_sh_matrix, normal4), normal4);
   c.a = 1.0;

   // Multiply by rgb factor (and scale by two)
   c = c * tex2D(rgb_map, Tex) * 2.0;
  
   return c;
}






]]></RmShaderCode>
      <RmSampler NAME="bump_map" REGISTER="-1"/>
      <RmSampler NAME="rgb_map" REGISTER="-1"/>
      <RmShaderConstant NAME="g_sh_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="r_sh_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="b_sh_matrix" REGISTER="-1"/>
     </RmHLSLShader>
     <RmHLSLShader NAME="Vertex Shader" PIXEL_SHADER="FALSE" TARGET="vs_1_1" ENTRY_POINT="main"><RmShaderCode TYPE="TEXT"><![CDATA[
float4x4 view_proj_matrix;
float4x4 view_matrix;
float4x4 inv_view_matrix;
//------------------------------------------------------------------//
// Spherical harmonic lighting, per-pixel illumination effect       //
//                                                                  //
// (c) Nathaniel Hoffman 2003                                       //
//                                                                  //
// Based on 'An Efficient Representation for Irradiance             //
// Environment Maps', SIGGRAPH 2001, by Ravi Ramamoorthi and Pat    //
// Hanrahan from Stanford University                                //
//------------------------------------------------------------------//

struct VS_OUTPUT
{
   float4 Pos:       POSITION;
   float4 Tex:       TEXCOORD0;
   float3 Normal:    TEXCOORD1;
   float3 Tangent:   TEXCOORD2;
   float3 Binormal:  TEXCOORD3;
};
VS_OUTPUT main(
   float4 vPosition: POSITION,
   float4 vNormal:   NORMAL,
   float4 vTex:      TEXCOORD,
   float4 vTangent:  TANGENT,
   float4 vBinormal: BINORMAL )
{
   VS_OUTPUT Out = (VS_OUTPUT) 0; 
   Out.Pos = mul(view_proj_matrix, vPosition);

   Out.Tex = vTex;

   // Rotate tangent basis from object/world space to view
   // space (in RenderMonkey lights are defined in view space)
   float4 nvec = float4(vNormal.x, vNormal.y, vNormal.z, 0.0);
   float4 tvec = float4(vTangent.x, vTangent.y, vTangent.z, 0.0);
   float4 bvec = float4(vBinormal.x, vBinormal.y, vBinormal.z, 0.0);

   Out.Normal = mul(view_matrix, nvec);
   Out.Tangent = mul(view_matrix, tvec);
   Out.Binormal = mul(view_matrix, bvec);

   return Out;
}



]]></RmShaderCode>
      <RmShaderConstant NAME="view_proj_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="view_matrix" REGISTER="-1"/>
      <RmShaderConstant NAME="inv_view_matrix" REGISTER="-1"/>
     </RmHLSLShader>
     <RmStreamMapReference NAME="PNTTB Stream Mapping"/>
     <RmTextureObject NAME="rgb_map" STATE_INDEX="0">
      <RmTextureReference NAME="rgb_map"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
     <RmTextureObject NAME="bump_map" STATE_INDEX="1">
      <RmTextureReference NAME="bump_map"/>
      <RmState NAME="D3DSAMP_MAGFILTER" STATE="5" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MINFILTER" STATE="6" VALUE="2" USAGE="SAMPLER_STATE"/>
      <RmState NAME="D3DSAMP_MIPFILTER" STATE="7" VALUE="2" USAGE="SAMPLER_STATE"/>
     </RmTextureObject>
    </RmPass>
   </RmDirectXEffect>
   <RmVectorVariable NAME="commonCont" ARTIST_EDITABLE="FALSE" VALUE_0="0.000000" VALUE_1="0.500000" VALUE_2="1.000000" VALUE_3="2.000000" MIN="-10.000000" MAX="10.000000" CLAMP="FALSE" NORMALIZE="FALSE"/>
   <RmMatrixVariable NAME="g_sh_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="-0.021450" VALUE_1="-0.021450" VALUE_2="0.090100" VALUE_3="-0.030700" VALUE_4="-0.021450" VALUE_5="0.021450" VALUE_6="-0.094390" VALUE_7="0.179080" VALUE_8="0.090100" VALUE_9="-0.094390" VALUE_10="-0.066880" VALUE_11="-0.092100" VALUE_12="-0.030700" VALUE_13="0.179080" VALUE_14="-0.092100" VALUE_15="-0.012800"/>
   <RmMatrixVariable NAME="b_sh_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="-0.128710" VALUE_1="-0.051490" VALUE_2="0.060070" VALUE_3="0.005120" VALUE_4="-0.051490" VALUE_5="0.128710" VALUE_6="-0.201650" VALUE_7="0.307000" VALUE_8="0.060070" VALUE_9="-0.201650" VALUE_10="-0.111470" VALUE_11="-0.138150" VALUE_12="0.005120" VALUE_13="0.307000" VALUE_14="-0.138150" VALUE_15="-0.034630"/>
   <RmMatrixVariable NAME="r_sh_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="0.090100" VALUE_1="-0.047190" VALUE_2="0.240260" VALUE_3="-0.148380" VALUE_4="-0.047190" VALUE_5="-0.090100" VALUE_6="-0.111550" VALUE_7="0.199550" VALUE_8="0.240260" VALUE_9="-0.111550" VALUE_10="-0.118900" VALUE_11="-0.173970" VALUE_12="-0.148380" VALUE_13="0.199550" VALUE_14="-0.173970" VALUE_15="-0.072390"/>
   <Rm2DTextureVariable NAME="rgb_map" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\Fieldstone.tga"/>
   <Rm2DTextureVariable NAME="bump_map" ARTIST_EDITABLE="TRUE" FILE_NAME="..\Media\Textures\FieldstoneBumpDOT3.tga"/>
   <RmStreamMap NAME="PNTTB Stream Mapping">
    <RmStream NAME="Binormal7" STRIDE="56">
     <RmStreamChannel NAME="Position_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="Normal_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="1" USAGE="3" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="TexCoord_0" DATA_SIZE="8" DATA_TYPE="1" REGISTER="2" USAGE="5" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="Tangent_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="3" USAGE="6" USAGE_INDEX="0"/>
     <RmStreamChannel NAME="Binormal_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="4" USAGE="7" USAGE_INDEX="0"/>
    </RmStream>
   </RmStreamMap>
   <RmModelData NAME="Teapot" FILE_NAME="..\Media\Models\Teapot.3ds"/>
  </RmEffectGroup>
  <RmMatrixVariable NAME="inv_view_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="0.969443" VALUE_1="0.047964" VALUE_2="-0.240583" VALUE_3="48.116669" VALUE_4="-0.244522" VALUE_5="0.110004" VALUE_6="-0.963383" VALUE_7="192.676682" VALUE_8="-0.019743" VALUE_9="0.992773" VALUE_10="0.118371" VALUE_11="-23.674229" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
  <RmMatrixVariable NAME="view_proj_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="2.208879" VALUE_1="-0.557145" VALUE_2="-0.044984" VALUE_3="0.000003" VALUE_4="0.115795" VALUE_5="0.265573" VALUE_6="2.396767" VALUE_7="0.000147" VALUE_8="-0.240824" VALUE_9="-0.964348" VALUE_10="0.118490" VALUE_11="199.199173" VALUE_12="-0.240583" VALUE_13="-0.963384" VALUE_14="0.118371" VALUE_15="199.999985"/>
  <RmMatrixVariable NAME="view_matrix" ARTIST_EDITABLE="FALSE" VALUE_0="0.969443" VALUE_1="-0.244522" VALUE_2="-0.019743" VALUE_3="0.000001" VALUE_4="0.047964" VALUE_5="0.110004" VALUE_6="0.992773" VALUE_7="0.000061" VALUE_8="-0.240583" VALUE_9="-0.963384" VALUE_10="0.118371" VALUE_11="199.999985" VALUE_12="0.000000" VALUE_13="0.000000" VALUE_14="0.000000" VALUE_15="1.000000"/>
  <RmStreamMap NAME="PNTTB Stream Mapping">
   <RmStream NAME="Binormal7" STRIDE="56">
    <RmStreamChannel NAME="Position_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="0" USAGE="0" USAGE_INDEX="0"/>
    <RmStreamChannel NAME="Normal_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="1" USAGE="3" USAGE_INDEX="0"/>
    <RmStreamChannel NAME="TexCoord_0" DATA_SIZE="8" DATA_TYPE="1" REGISTER="2" USAGE="5" USAGE_INDEX="0"/>
    <RmStreamChannel NAME="Tangent_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="3" USAGE="6" USAGE_INDEX="0"/>
    <RmStreamChannel NAME="Binormal_0" DATA_SIZE="12" DATA_TYPE="2" REGISTER="4" USAGE="7" USAGE_INDEX="0"/>
   </RmStream>
  </RmStreamMap>
 </RmEffectWorkspace>
</RENDER_MONKEY>
